{"ast":null,"code":"var _jsxFileName = \"C:\\\\Programming\\\\Projects\\\\Task_Management_with_User_Authentication\\\\Frontend\\\\frontend-interface\\\\src\\\\Component\\\\TaskList.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport './Css files/TaskList.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction TaskList() {\n  _s();\n  const [todos, setTodos] = useState([]);\n  const [newTodo, setNewTodo] = useState('');\n  const userId = localStorage.getItem(\"userId\");\n  // Fetch todos from the backend\n  useEffect(() => {\n    const fetchTodos = async () => {\n      if (!userId) {\n        console.error(\"UserId is not available.\");\n        return;\n      }\n      try {\n        const response = await axios.get(`http://localhost:5000/api/todos?userId=${userId}`);\n        setTodos(response.data); // Successfully set todos from response\n      } catch (error) {\n        console.error(\"Error fetching todos:\", error);\n        // Log the error response to debug further\n      }\n    };\n    fetchTodos();\n  }, [userId]);\n  const handleAddTodo = () => {\n    if (newTodo.trim()) {\n      const todo = {\n        userId: userId,\n        text: newTodo,\n        completed: false\n      };\n      axios.post('http://localhost:5000/api/todos', todo).then(response => {\n        setTodos([...todos, response.data]);\n        setNewTodo('');\n      }).catch(error => console.error('Error adding todo:', error));\n    }\n  };\n  const handleToggleComplete = index => {\n    const todo = todos[index];\n    const updatedTodo = {\n      ...todo,\n      completed: !todo.completed,\n      userId: userId\n    };\n    axios.put(`http://localhost:5000/api/todos/${todo.id}`, updatedTodo).then(() => {\n      const updatedTodos = todos.map((t, i) => i === index ? updatedTodo : t);\n      setTodos(updatedTodos);\n    }).catch(error => console.error('Error updating todo:', error));\n  };\n  const handleUpdateTodo = (index, newText) => {\n    const todo = todos[index];\n    const updatedTodo = {\n      ...todo,\n      text: newText\n    };\n    axios.put(`http://localhost:5000/api/todos/${todo.id}`, updatedTodo).then(() => {\n      const updatedTodos = todos.map((t, i) => i === index ? updatedTodo : t);\n      setTodos(updatedTodos);\n    }).catch(error => console.error('Error updating todo:', error));\n  };\n  const handleDeleteTodo = index => {\n    const todo = todos[index];\n    axios.delete(`http://localhost:5000/api/todos/${todo.id}?userId=${userId}`).then(() => {\n      const updatedTodos = todos.filter((_, i) => i !== index);\n      setTodos(updatedTodos);\n    }).catch(error => console.error('Error deleting todo:', error));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"todo-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Todo List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"todo-input\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: newTodo,\n        onChange: e => setNewTodo(e.target.value),\n        placeholder: \"Add a new task...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleAddTodo,\n        children: \"Add\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"todo-list\",\n      children: todos.map((todo, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        className: todo.completed ? 'completed' : '',\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          checked: todo.completed,\n          onChange: () => handleToggleComplete(index)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: todo.text,\n          onChange: e => handleUpdateTodo(index, e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleDeleteTodo(index),\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 13\n        }, this)]\n      }, todo.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 5\n  }, this);\n}\n_s(TaskList, \"5IWrR3qlB9fd4Xrb4YgyFMm9peE=\");\n_c = TaskList;\nexport default TaskList;\nvar _c;\n$RefreshReg$(_c, \"TaskList\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","TaskList","_s","todos","setTodos","newTodo","setNewTodo","userId","localStorage","getItem","fetchTodos","console","error","response","get","data","handleAddTodo","trim","todo","text","completed","post","then","catch","handleToggleComplete","index","updatedTodo","put","id","updatedTodos","map","t","i","handleUpdateTodo","newText","handleDeleteTodo","delete","filter","_","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","e","target","placeholder","onClick","checked","_c","$RefreshReg$"],"sources":["C:/Programming/Projects/Task_Management_with_User_Authentication/Frontend/frontend-interface/src/Component/TaskList.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport './Css files/TaskList.css';\n\nfunction TaskList() {\n  const [todos, setTodos] = useState([]);\n  const [newTodo, setNewTodo] = useState('');\n  const userId = localStorage.getItem(\"userId\"); \n  // Fetch todos from the backend\n  useEffect(() => {\n    const fetchTodos = async () => {\n      if (!userId) {\n        console.error(\"UserId is not available.\");\n        return;\n      }\n  \n      try {\n        const response = await axios.get(`http://localhost:5000/api/todos?userId=${userId}`);\n        setTodos(response.data); // Successfully set todos from response\n      } catch (error) {\n        console.error(\"Error fetching todos:\", error);\n        // Log the error response to debug further\n      }\n    };\n    fetchTodos();\n  }, [userId]);\n  \n  const handleAddTodo = () => {\n    if (newTodo.trim()) {\n      const todo = { userId:userId,text: newTodo, completed: false };\n      axios.post('http://localhost:5000/api/todos', todo)\n        .then((response) => {\n          setTodos([...todos, response.data]);\n          setNewTodo('');\n        })\n        .catch((error) => console.error('Error adding todo:', error));\n    }\n  };\n\n  const handleToggleComplete = (index) => {\n    const todo = todos[index];\n    const updatedTodo = { ...todo, completed: !todo.completed, userId: userId };\n  \n    axios.put(`http://localhost:5000/api/todos/${todo.id}`, updatedTodo)\n      .then(() => {\n        const updatedTodos = todos.map((t, i) => (i === index ? updatedTodo : t));\n        setTodos(updatedTodos);\n      })\n      .catch((error) => console.error('Error updating todo:', error));\n  };\n  \n\n  const handleUpdateTodo = (index, newText) => {\n    const todo = todos[index];\n    const updatedTodo = { ...todo, text: newText };\n\n    axios.put(`http://localhost:5000/api/todos/${todo.id}`, updatedTodo)\n      .then(() => {\n        const updatedTodos = todos.map((t, i) => (i === index ? updatedTodo : t));\n        setTodos(updatedTodos);\n      })\n      .catch((error) => console.error('Error updating todo:', error));\n  };\n\n  const handleDeleteTodo = (index) => {\n    const todo = todos[index];\n\n    axios.delete(`http://localhost:5000/api/todos/${todo.id}?userId=${userId}`)\n      .then(() => {\n        const updatedTodos = todos.filter((_, i) => i !== index);\n        setTodos(updatedTodos);\n      })\n      .catch((error) => console.error('Error deleting todo:', error));\n  };\n  \n\n  return (\n    <div className=\"todo-container\">\n      <h1>Todo List</h1>\n      <div className=\"todo-input\">\n        <input\n          type=\"text\"\n          value={newTodo}\n          onChange={(e) => setNewTodo(e.target.value)}\n          placeholder=\"Add a new task...\"\n        />\n        <button onClick={handleAddTodo}>Add</button>\n      </div>\n      <ul className=\"todo-list\">\n        {todos.map((todo, index) => (\n          <li key={todo.id} className={todo.completed ? 'completed' : ''}>\n            <input\n              type=\"checkbox\"\n              checked={todo.completed}\n              onChange={() => handleToggleComplete(index)}\n            />\n            <input\n              type=\"text\"\n              value={todo.text}\n              onChange={(e) => handleUpdateTodo(index, e.target.value)}\n            />\n            <button onClick={() => handleDeleteTodo(index)}>Delete</button>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n}\n\nexport default TaskList;\n\n\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}